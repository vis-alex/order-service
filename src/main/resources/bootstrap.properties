spring.application.name=order-service
server.port=0
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

#Set the config server uri, from where will get configs
spring.cloud.config.uri=http://localhost:8888

#For working of refresh scope
management.endpoints.web.exposure.include=*

#Vault config
spring.cloud.vault.host=localhost
spring.cloud.vault.port=8200
spring.cloud.vault.scheme=http
spring.cloud.vault.authentication=TOKEN
#Token was taken from cmd when was started vault server
spring.cloud.vault.token=hvs.fKsbPhXpu7nx5GnX2zmQVs1G
spring.cloud.vault.application-name=order-service

#Rabbitmq for updating configuration on all our services
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/microservice-project-realm
#I think its deprecated. Spring not using ribbon now. Eureka do load balance automatically
#spring.cloud.loadbalancer.ribbon.enabled=false

#
#spring.cloud.config.uri=http://localhost:8888
#spring.application.name=order-service
#server.port=0
#eureka.instance.instance-id=${spring.application.name}:${random.uuid}
#management.endpoints.web.exposure.include=*
#spring.cloud.vault.host=localhost
#spring.cloud.vault.port=8200
#spring.cloud.vault.scheme=http
#spring.cloud.vault.authentication=TOKEN
#spring.cloud.vault.token=hvs.fKsbPhXpu7nx5GnX2zmQVs1G
#spring.cloud.vault.application-name=order-service
#spring.rabbitmq.host=localhost
#spring.rabbitmq.port=5672
#spring.rabbitmq.username=guest
#spring.rabbitmq.password=guest
#spring.cloud.loadbalancer.ribbon.enabled=false
#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/microservice-project-realm