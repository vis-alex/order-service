#Set the config server uri, from where will get configs
spring.cloud.config.uri=http://localhost:8888
spring.application.name=order-service
#0 - Spring dynamically auto assignment for port . Cause we need create multiple instances
server.port=0
#Unique service identifier for eureka
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
spring.datasource.url=jdbc:mysql://localhost:3306/order_service

#Now it stores in vault
#spring.datasource.username=root
#spring.datasource.password=mysql

#For working of refresh scope
management.endpoints.web.exposure.include=*

#Vault config
spring.cloud.vault.host=localhost
spring.cloud.vault.port=8200
spring.cloud.vault.scheme=http
spring.cloud.vault.authentication=TOKEN
#Token was taken from cmd when was started vault server
spring.cloud.vault.token=hvs.xZdyzoLWdBPyJ6yjSSnN4J7Z
spring.cloud.vault.application-name=order-service

#Rabbitmq for updating configuration on all our services
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8180/auth/realms/microservice-project-realm
#I think its deprecated. Spring not using ribbon now. Eureka do load balance automatically
#spring.cloud.loadbalancer.ribbon.enabled=false

#I add name of the binding by standard property name convention notificationEventSupplier-out-0
# out - Spring will denote this as output binder, 0 - index of output binding
spring.cloud.stream.bindings.notificationEventSupplier-out-0.destination=notification-events
spring.cloud.stream.source=notificationEventSupplier